version: '3'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=subnest_db
      - DB_USER=subnest
      - DB_PASSWORD=subnest_secure_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=1d
      - REFRESH_TOKEN_EXPIRES_IN=30d
      - API_URL=https://api.subnest.com
      - FRONTEND_URL=https://subnest.com
    depends_on:
      - postgres
      - redis
    networks:
      - subnest-network

  # Frontend web service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - subnest-network

  # PostgreSQL database
  postgres:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=subnest
      - POSTGRES_PASSWORD=subnest_secure_password
      - POSTGRES_DB=subnest_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - subnest-network

  # Redis for caching and session management
  redis:
    image: redis:6
    restart: always
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - subnest-network

  # Nginx for SSL termination and load balancing
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - backend
      - frontend
    networks:
      - subnest-network

networks:
  subnest-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
